#+title: Shell
#+description: I find myself spending less and less time in the shell these days as my Emacs chops improve, but Emacs doesn't have a mode to replace every CLI I use.
#+slug: shell
#+tags: public languages bash
#+type: garden
#+lastmod: 2022-05-10 15:04:56.504497779 -0400 EDT
* Tools
Notes on all the command line tools that I use.

** ripgrep
The ~rg~ command is replacement to grep that's faster and has more features.

Basic usage:

#+BEGIN_SRC shell
rg [OPTIONS] PATTERN [PATH ...]
#+END_SRC

*** Options
- ~-g --glob~ :: Match files with the glob. Prefix the pattern with ~!~ to invert it. You can provide multiple glob flags.
- ~-A --after-context~ :: Show lines after the match.
- ~-B --before-context~ :: Show lines before the match.
- ~-e --extension~ :: Match files with the given extension.

** du
A tool to deal with disk usage stuff when ~ls~ and right-clicking in the GUI file explorer has failed.

*** Options
- ~-s FILE~ :: Show the usage of a file.
- ~-h~ :: Show the usage in a human-readable format.

** rsync
A file movement utility that can handle a bunch of extra things that ~cp~ and ~mv~ can't.

Basic usage:

#+BEGIN_SRC shell
rsync [OPTIONS] SRC... [DEST]
#+END_SRC

*** Options
- ~--archive, -a~ :: Archive mode. Not sure what this does, but my aliases use it so...
- ~--human-readable, -h~ :: Human readable file sizes.
- ~--progress, -P~ :: Show the progress bar.
- ~--remove-source-files~ :: Remove the source files after the transfer is complete.

** lsof
Deal with open files, which includes a lot of things besides normal files. I mainly use this when I have some weird port conflict.

*** Options
- ~-i :PORT~ :: Deal with ports.

* Recipes
Common tasks that I need to do that aren't tied to one tool or concept.

** Replace cp and mv with rsync
These are some aliases that replace ~cp~ and ~mv~ with ~rsync~ for a better UX, such as progress display.

#+BEGIN_SRC shell
alias rcp="rsync -ahP"
alias rmv="rsync -ahP --remove-source-files"
#+END_SRC

** STDIN as file
When a command expects a filename, this

#+BEGIN_SRC shell
kubectl apply -f - <<EOF
<-- file contents -->
EOF
#+END_SRC

* Reference
** Globbing
- ~*~ :: Used to match things in a single directory level. This will match everything except slashes.
- ~**~ :: Used to match things in all directory levels. This will match everything including slashes.
- ~*(pattern)~ :: Used to match anything that matches the pattern in parenthesis.
- ~?~ :: Matches one and only one character.
- ~[class/range]~ :: Matches the character class or range in the brackets. Works like regex where its either a list of characters or ranges.
- ~!~ :: Negates the pattern. It goes inside of brackets and outside parenthesis.
- ~\~ :: Escapes the above special characters if needed for a match.

* Links
- [[https://sleeplessbeastie.eu/2021/09/08/how-to-create-personal-tmux-configuration/][Good tmux configuration blog]]


