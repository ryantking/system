---
- name: "Clone the dotfiles repository"
  ansible.builtin.git:
    repo: "{{ dotfiles_repo }}"
    dest: "{{ dotfiles_path }}"
    version: "{{ dotfiles_version }}"
  tags: ["dotfiles:clone"]

- name: "Ensure config directory exists"
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/{{ link.to | dirname }}"
    mode: "0755"
    state: directory
  loop: "{{ dotfiles_links }}"
  loop_control:
    loop_var: link
    label: "{{ link.from }}"
  when:
    - link.to | d()
    - link.to | split("/") | length > 1

- name: "Link dotfiles"
  ansible.builtin.file:
    src: "{{ dotfiles_path }}/config/{{ link.from }}"
    dest: "{{ ansible_env.HOME }}/{{ link.to | d('.config/' + link.from) }}"
    force: true
    state: link
  loop: "{{ dotfiles_links }}"
  loop_control:
    loop_var: link
    label: "{{ link.from }}"
  when: not link.recurse | d()

- name: "Link configurations recursively"
  vars:
    dest: "{{ ansible_env.HOME }}/{{ link.to | d('.config/' + link.from) }}"
  ansible.builtin.shell:
    cmd: |
      changed=0
      for file in {{ dotfiles_path }}/config/{{ link.from }}/*; do
        target="{{ dest }}/$(basename $file)"
        if [ ! -L "$target" ] || \
           [ "$(readlink -f "$target")" != "$(readlink -f "$file")" ]; then
          ln -sf "$file" "$target"
          changed=1
        fi
      done
      echo "changed=$changed"
  register: link_result
  loop: "{{ dotfiles_links }}"
  loop_control:
    loop_var: link
    label: "{{ link.from }}"
  when: link.recurse | d()
  changed_when: link_result.stdout is search("changed=1")
