---
- name: "Add user shell to supported list"
  become: true
  ansible.builtin.lineinfile:
    path: "/etc/shells"
    line: "{{ user_shell }}"
    state: present

- name: "Create user groups"
  ansible.builtin.group:
    name: "{{ group.name }}"
    system: "{{ group.system | d(omit) }}"
  loop: "{{ user_groups }}"
  loop_control:
    loop_var: group

- name: "Create user account"
  become: true
  ansible.builtin.user:
    name: "{{ user_name }}"
    groups: "{{ user_groups | map(attribute='name') | list }}"
    append: true
    shell: "{{ user_shell }}"
    state: present

- name: "Configure passwordless sudo"
  become: true
  ansible.builtin.lineinfile:
    path: "/etc/sudoers.d/{{ user_name }}"
    line: "{{ user_name }} ALL=(ALL) NOPASSWD: ALL"
    validate: "visudo -cf %s"
    create: true
    mode: "0440"
    state: present

- name: "Clone the dotfiles repository"
  ansible.builtin.git:
    repo: "{{ user_dotfiles_repo }}"
    dest: "{{ user_dotfiles_path }}"
    version: "{{ user_dotfiles_version }}"
  tags: ["role::user:dotfiles", "skip::user:dotfiles-clone"]

- name: "Link dotfiles"
  become: "{{ link.owner is defined }}"
  become_user: "{{ link.owner | d(omit) }}"
  ansible.builtin.file:
    src: "{{ user_dotfiles_path }}/{{ link.src }}"
    dest: "{{ link.dest | d(user_home ~ '/.' + link.src) }}"
    force: true
    mode: "{{ link.mode | d('0755') }}"
    state: link
  loop: "{{ user_dotfiles_links }}"
  loop_control:
    loop_var: link
    label: "{{ link.src }}"
  tags: ["role::user:dotfiles"]

- name: "Ensure download directory exists"
  become: "{{ file.owner is defined }}"
  become_user: "{{ file.owner | d(user_name) }}"
  ansible.builtin.file:
    path: "{{ file.path | dirname }}"
    mode: "0755"
    state: directory
  loop: "{{ user_download_urls }}"
  loop_control:
    loop_var: file
    label: "{{ file.url }}"
  tags: ["role::user:urls"]

- name: "Download files"
  become: "{{ file.owner is defined }}"
  become_user: "{{ file.owner | d(user_name) }}"
  ansible.builtin.get_url:
    url: "{{ file.url }}"
    dest: "{{ file.path }}"
    mode: "0755"
  loop: "{{ user_download_urls }}"
  loop_control:
    loop_var: file
    label: "{{ file.url }}"
  tags: ["role::user:urls"]
