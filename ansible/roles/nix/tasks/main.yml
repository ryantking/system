---
- name: "Check if Nix is already installed"
  ansible.builtin.command: "bash -l -c 'which nix'"
  register: nix_check
  failed_when: false
  changed_when: false

- name: "Run the Nix installation script"
  ansible.builtin.shell:
    cmd: "sh <(curl -L https://nixos.org/nix/install) --daemon --yes"
    executable: "/bin/bash"
  changed_when: true
  when: nix_check.rc != 0

- name: "Manage Nix settings"
  become: true
  ansible.builtin.lineinfile:
    path: "/etc/nix/nix.conf"
    regexp: "^{{ opt.key }}"
    line: "{{ opt.key }} = {{ opt.value }}"
    state: present
  loop: "{{ nix_settings | dict2items }}"
  loop_control:
    loop_var: opt
    label: "{{ opt.key }}"

- name: "Ensure nixpkgs config directory exists"
  ansible.builtin.file:
    path: "{{ nix_nixpkgs_dir }}"
    mode: "0755"
    state: directory

- name: "Manage nixpkgs configuration"
  ansible.builtin.copy:
    dest: "{{ nix_nixpkgs_dir }}/config.nix"
    content: "{{ nix_nixpkgs_config }}"
    mode: "0644"

- name: "Manage nixpkgs channel"
  ansible.builtin.command: >-
    bash -l -c 'nix-channel --add {{ nix_nixpkgs_channel }}'
  register: result
  changed_when: result.stdout_lines | length > 1

- name: "Update nixpkgs channels"
  ansible.builtin.command: >-
    bash -l -c "nix-channel --update"
  changed_when: true

- name: "Install Nix packages"
  ansible.builtin.command: >-
    bash -l -c 'nix profile install nixpkgs#{{ pkg }}'
  loop: "{{ nix_all_packages }}"
  loop_control:
    loop_var: pkg
  register: result
  changed_when: "'is already installed' not in result.stderr"
  tags: ["role::nix:packages"]
