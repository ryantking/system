---
- name: "Install SSH packages"
  become: true
  ansible.builtin.package:
    name: "{{ ssh_packages }}"
    state: present
  when: ansible_system == 'Linux'

- name: "Manage client directory"
  ansible.builtin.file:
    path: "{{ ssh_dir }}"
    owner: "{{ ssh_user }}"
    group: "{{ ssh_group }}"
    mode: "0700"
    state: directory

- name: "Manage client configuration"
  ansible.builtin.template:
    src: "templates/ssh_config.j2"
    dest: "{{ ssh_dir }}/config"
    owner: "{{ ssh_user }}"
    group: "{{ ssh_group }}"
    mode: "0600"
    lstrip_blocks: true
    trim_blocks: true
  tags: ["role::ssh:config"]

- name: "Configure authorized keys"
  ansible.posix.authorized_key:
    user: "{{ ssh_user }}"
    key: "{{ lookup('file', '~/.ssh/' + sshkey.name + '.pub') }}"
    state: present
  loop: "{{ ssh_all_keys }}"
  loop_control:
    loop_var: sshkey
  when: sshkey.authorized | d()

- name: "Copy public keys from controller"
  ansible.builtin.copy:
    src: "{{ lookup('env', 'HOME') }}/.ssh/{{ sshkey.name }}.pub"
    dest: "{{ ssh_dir }}/{{ sshkey.name }}.pub"
    owner: "{{ ssh_user }}"
    group: "{{ ssh_group }}"
    mode: "0600"
  loop: "{{ ssh_all_keys }}"
  loop_control:
    loop_var: sshkey

- name: "Copy private keys from controller"
  ansible.builtin.copy:
    src: "{{ lookup('env', 'HOME') }}/.ssh/{{ sshkey.name }}"
    dest: "{{ ssh_dir }}/{{ sshkey.name }}"
    owner: "{{ ssh_user }}"
    group: "{{ ssh_group }}"
    mode: "0600"
  loop: "{{ ssh_all_keys }}"
  loop_control:
    loop_var: sshkey
